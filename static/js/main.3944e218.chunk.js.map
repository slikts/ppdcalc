{"version":3,"sources":["Scene.module.scss","Ruler.module.scss","Viewpoint.module.scss","App.module.scss","Screen.module.scss","DataTable.module.scss","update.js","util.js","Screen.js","state.js","ScalePerson.js","ScaleBanana.js","Ruler.js","DataTable.js","Viewpoint.js","Scene.js","Slider.js","Resolution.js","Controls.js","App.js","index.js"],"names":["module","exports","getAbsSize","n","fov","Math","sin","dToR","dataKeys","update","draft","value","depth","maxRange","range","sceneVars","scene","vars","diagonalIn","diagonal","maxAbsSize","absSize","diagonalCm","inToCm","screen","resolution","xRes","x","yRes","y","screenWidth","round","sqrt","size","screenHeight","ratio","format","percentize","width","height","elevation","aspectRatio","zoom","containerWidth","containerHeight","tileSize","viewpointOffset","viewpoint","a","b","rowData","centerPoint","centerAngle","atan","PI","degree","degreeize","ppi","hypot","angleDistance","ppd","cmToIn","viewpointMeasureHeight","offset","clamp","min","max","mapObject","o","f","Object","fromEntries","entries","map","cssize","k","v","serialize","state","kv","join","d","React","memo","inverse","className","styles","Screen","style","StateContext","createContext","CallbackContext","Provider","methods","initialState","children","useMethods","callbacks","useStateContext","useContext","useCallbackContext","ScalePerson","viewBox","transform","cx","cy","r","ScaleBanana","segments","Array","from","length","_","i","segment","key","data-n","ceil","Ruler","person","banana","data","DataTable","Paper","Table","TableBody","values","row","TableRow","name","TableCell","component","scope","align","classNames","Viewpoint","abs","icon","Icon","Scene","Fragment","container","subcontainer","ground","label","onChange","step","units","handleSliderChange","useCallback","handleInputChange","target","id","btoa","replace","Typography","gutterBottom","Grid","spacing","alignItems","item","xs","aria-labelledby","Input","input","margin","inputProps","type","endAdornment","InputAdornment","position","presets","handleInputChangeX","setScreenResX","handleInputChangeY","setScreenResY","handleSelectChange","split","Number","items","useMemo","MenuItem","FormControl","FormLabel","FormHelperText","InputLabel","htmlFor","Select","has","Controls","direction","justify","setDepth","setViewpoint","setElevation","setDiagonal","setFOV","Button","variant","startIcon","onClick","reset","theme","createMuiTheme","palette","persistUpdate","location","window","hash","persist","history","pushState","document","title","pathname","search","produce","NaN","relative","top","reduce","m","set","Map","viewpointMeasureInverse","persistedState","baseState","slice","filter","Boolean","s","trim","forEach","includes","unserialize","App","ThemeProvider","CssBaseline","main","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3944e218.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scene\":\"Scene_Scene__2Jo2n\",\"container\":\"Scene_container__igEhO\",\"subcontainer\":\"Scene_subcontainer__3mBWq\",\"ground\":\"Scene_ground__2OY49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ruler\":\"Ruler_Ruler__2j-pf\",\"segment\":\"Ruler_segment__Tuf2S\",\"person\":\"Ruler_person__1s0XW\",\"banana\":\"Ruler_banana__1o2eT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Viewpoint\":\"Viewpoint_Viewpoint__qfcA5\",\"inverse\":\"Viewpoint_inverse__3fMsu\",\"icon\":\"Viewpoint_icon__1WY5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Screen_Screen__1_9xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataTable\":\"DataTable_DataTable__3VVmB\"};","import { inToCm, cmToIn, degreeize, percentize, dToR } from \"./util\";\n\nexport const getAbsSize = (n, fov) =>\n  (n * Math.sin(dToR(fov / 2))) / Math.sin(dToR(fov / 2) + dToR(90));\nconst getDeg = (a, b) => Math.atan(a / b) * (180 / Math.PI);\n\nexport const dataKeys = [\"depth\", \"diagonal\", \"elevation\", \"viewpoint\", \"fov\"];\n\nconst update = draft => {\n  // fov\n  const {\n    fov: { value: fov },\n  } = draft;\n  const {\n    depth: {\n      range: [, maxRange],\n      value: depth,\n    },\n    scene: { vars: sceneVars },\n    diagonal: { value: diagonalIn },\n  } = draft;\n  const maxAbsSize = getAbsSize(maxRange, fov);\n  draft.maxAbsSize = maxAbsSize;\n  const absSize = getAbsSize(depth, fov);\n  draft.absSize = absSize;\n  // screen size\n  const diagonalCm = inToCm(diagonalIn);\n  const { x: xRes, y: yRes } = draft.screen.resolution;\n  const screenWidth = Math.round(\n    (diagonalCm * xRes) / Math.sqrt(xRes ** 2 + yRes ** 2),\n  );\n  draft.screen.size.x = screenWidth;\n  const screenHeight = Math.round(screenWidth / (xRes / yRes));\n  draft.screen.size.y = screenHeight;\n  // relativize\n  const ratio = 100 / maxAbsSize;\n  draft.ratio = ratio;\n  const format = n => percentize(n * ratio);\n  draft.screen.vars.width = format(draft.screen.size.x);\n  draft.screen.vars.height = format(draft.screen.size.y);\n  const {\n    elevation: { value: elevation },\n  } = draft;\n  draft.screen.vars.elevation = percentize(elevation * ratio);\n  // scene size\n  const { aspectRatio } = sceneVars;\n  const zoom = maxAbsSize / absSize;\n  sceneVars.ratio = ratio;\n  sceneVars.zoom = zoom;\n  sceneVars.containerWidth = percentize(zoom * 100);\n  sceneVars.containerHeight = percentize(zoom * 100 * aspectRatio);\n  sceneVars.tileSize = percentize(100 / (maxAbsSize / 100));\n  const viewpointOffset = draft.viewpoint.value;\n  sceneVars.viewpointOffset = percentize(viewpointOffset * ratio);\n  // data rows\n  const { rowData } = draft;\n  const centerPoint = elevation + screenHeight / 2 - viewpointOffset;\n  // const topPoint = elevation + screenHeight - viewpointOffset;\n  const centerAngle = getDeg(centerPoint, depth);\n  // const topAngle = getDeg(topPoint, depth);\n  // const botAngle = getDeg(elevation - viewpointOffset, depth);\n  rowData.degree.value = degreeize(Math.round(centerAngle));\n  const ppi = Math.round(Math.hypot(xRes, yRes) / diagonalIn);\n  const angleDistance = Math.hypot(centerPoint, depth);\n  rowData.ppi.value = ppi;\n  // const angle = Math.abs(\n  //   topAngle > botAngle ? topAngle - botAngle : botAngle - topAngle,\n  // );\n  const ppd =\n    xRes /\n    2 /\n    ((180 / Math.PI) *\n      Math.atan(\n        ((diagonalIn / Math.sqrt(xRes ** 2 + yRes ** 2)) * (xRes / 2)) /\n          cmToIn(angleDistance),\n      ));\n  rowData.ppd.value = Math.round(ppd * 10) / 10;\n  // viewpoint measure\n  const viewpointMeasureHeight = elevation + screenHeight / 2 - viewpointOffset;\n  draft.viewpoint.height = viewpointMeasureHeight * ratio;\n  draft.viewpoint.vars.offset = percentize(\n    viewpointMeasureHeight < 0\n      ? (elevation + screenHeight / 2) * ratio\n      : viewpointOffset * ratio,\n  );\n};\n\nexport default update;\n","import { produce } from \"immer\";\nimport { dataKeys } from \"./update\";\n\nexport const strip = s => btoa(s).replace(/=/g, \"\");\n\nexport const clamp = (n, min, max) => Math.min(Math.max(n, min), max);\n\nconst inCmRatio = 2.54;\nexport const inToCm = n => n * inCmRatio;\nexport const cmToIn = n => n / inCmRatio;\n\nexport const optionalLabel = (a, b) => `${a}${b ? ` (${b})` : \"\"}`;\n\nexport const mapObject = (o, f) => Object.fromEntries(Object.entries(o).map(f));\nexport const mapObjectValues = (o, f) => mapObject(o, ([k, v]) => [k, f(v)]);\n\nexport const cssize = o => mapObject(o, ([k, v]) => [`--${k}`, v]);\n\nexport const degreeize = n => `${n}°`;\nexport const percentize = n => `${n}%`;\nexport const pixelize = n => `${n}px`;\n\nexport const serialize = state =>\n  dataKeys\n    .map(k => [k, state[k].value])\n    .map(kv => kv.join(\":\"))\n    .join(\",\");\n\nexport const unserialize = (baseState, update, hash = window.location.hash) => {\n  const data = hash\n    .slice(1)\n    .split(\",\")\n    .filter(Boolean)\n    .map(x => x.split(\":\").map(s => s.trim()));\n\n  return produce(baseState, draft => {\n    data.forEach(([k, v]) => {\n      if (!v || !dataKeys.includes(k)) {\n        return;\n      }\n      draft[k].value = Number(v);\n    });\n    update(draft);\n  });\n};\n\nexport const dToR = d => d * (Math.PI / 180);\n\nexport const removeHash = () => {\n  window.history.pushState(\n    \"\",\n    document.title,\n    window.location.pathname + window.location.search,\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Screen.module.scss\";\nimport { cssize } from \"./util\";\n\nconst Screen = ({ vars, inverse }) => {\n  return <div className={styles.Screen} style={cssize(vars)} />;\n};\n\nexport default React.memo(Screen);\n","import React, { createContext, useContext } from \"react\";\nimport useMethods from \"use-methods\";\n\nconst StateContext = createContext();\nconst CallbackContext = createContext();\n\nexport const Provider = ({ methods, initialState, children }) => {\n  const [state, callbacks] = useMethods(methods, initialState);\n  return (\n    <StateContext.Provider value={state}>\n      <CallbackContext.Provider value={callbacks}>\n        {children}\n      </CallbackContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateContext = () => useContext(StateContext);\nexport const useCallbackContext = () => useContext(CallbackContext);\n","import React from \"react\";\n\nconst ScalePerson = () => (\n  <svg viewBox=\"0 0 119.28428 261.78967\">\n    <g transform=\"translate(-41.83 -16.634)\">\n      <circle cx=\"101.3\" cy=\"43.896\" r=\"27.261\" />\n      <path\n        transform=\"scale(.26458)\"\n        d=\"m304.69 1051.2c-17.56-3.4715-29.996-17.666-33.235-37.936-0.53947-3.3762 0.88852-42.124 6.0677-164.64 3.7252-88.125 7.1027-167.14 7.5054-175.58 2.4633-51.665 2.7514-90.407 1.4361-193.11-0.71253-55.635-0.81588-58.598-2.1344-61.182-2.7302-5.3516-7.8714-7.2135-12.833-4.6476-3.1163 1.6115-4.2748 3.7452-11.058 20.368-6.9545 17.041-11.089 29.071-17.455 50.78-8.0752 27.541-10.563 40.029-16.869 84.664-2.9444 20.841-4.5756 26.781-9.2858 33.814-5.7664 8.6102-12.885 12.403-23.209 12.366-19.533-0.0693-32.471-10.152-35.08-27.339-1.6347-10.768 1.2881-32.462 8.0248-59.561 2.355-9.4735 6.0585-25.413 8.2299-35.421 6.3836-29.423 8.852-36.777 33.33-99.303 11.803-30.148 13.571-34.285 19.776-46.248 15.842-30.547 37.017-53.271 60.006-64.397l6.7857-3.284 87.616-0.18959 87.616-0.1896 4.6672 1.6941c15.151 5.4994 33.809 20.777 47.283 38.716 13.884 18.485 21.103 32.789 36.753 72.826 25.547 65.356 27.525 71.345 34.916 105.71 1.9429 9.0357 5.3207 23.5 7.5063 32.143 7.4749 29.56 9.743 52.027 6.3463 62.867-2.7061 8.636-7.0795 13.844-14.919 17.764-8.677 4.3398-21.471 5.5086-28.964 2.6462-8.3606-3.1936-13.911-9.3869-17.661-19.706-2.0959-5.7678-2.4684-7.7368-5.1353-27.143-2.2327-16.247-6.2383-41.113-8.1693-50.714-2.0534-10.21-9.4465-36.295-15.461-54.551-4.3246-13.127-15.27-40.697-17.759-44.735-2.9312-4.7537-9.5096-6.1581-13.423-2.8654-4.6646 3.925-4.435 1.0794-5.1442 63.766-0.35443 31.326-0.80907 68.368-1.0103 82.314-0.35662 24.714 0.29392 61.04 1.7269 96.429 0.38975 9.625 3.9053 92.714 7.8123 184.64 6.454 151.86 7.0149 167.63 6.1333 172.5-4.4063 24.325-20.469 37.857-44.938 37.857-18.36 0-32.075-8.0499-39.326-23.082-3.4135-7.0762-5.0615-12.652-5.7397-19.418-0.23624-2.3571-3.6285-82.41-7.5384-177.9-7.5948-185.48-7.2058-179.05-11.064-182.9-2.9303-2.9303-5.8857-1.9373-8.298 2.788-1.151 2.2546-1.7015 5.1669-2.1895 11.583-0.35857 4.7143-3.665 83.304-7.3475 174.64-3.6826 91.339-7.0318 169-7.4428 172.59-0.85827 7.4881-3.7224 16.196-7.2563 22.062-3.368 5.5904-10.983 12.611-16.501 15.212-9.0472 4.2648-21.78 5.5344-33.087 3.2991z\"\n      />\n    </g>\n  </svg>\n);\n\nexport default ScalePerson;\n","import React from \"react\";\n\nconst ScaleBanana = () => (\n  <svg viewBox=\"0 0 115.70131 98.49147\">\n    <g transform=\"translate(57.603 -133.78)\">\n      <path d=\"m-48.799 232.28c-0.58534 0-2.1366-0.11815-3.5547-0.23633s-2.6953-0.23633-2.6953-0.23633l-0.0117-2e-3 -0.0117-4e-3s-0.45094-0.1242-0.86524-0.48828c-0.41429-0.36408-0.79486-0.98801-0.64648-1.9277 0.13955-0.8838 0.54207-4.3634 0.9082-7.6113 0.36488-3.2369 0.69306-6.2294 0.69531-6.25-0.0223-0.0579-3.87-10.07-2.2051-23.857 1.6698-13.827 8.9004-31.423 31.086-46.469 20.753-14.075 40.485-13.227 55.594-7.5879 7.5543 2.8194 13.954 6.8344 18.758 10.779 4.8037 3.9449 8.0108 7.8098 9.1856 10.375 0.85945 1.8768 0.86759 3.6951 0.0977 5.0156-0.76993 1.3205-2.3163 2.1188-4.4785 1.9746-1.0775-0.0718-3.5772-0.41373-7.1582-0.67774-3.581-0.264-8.2358-0.44888-13.592-0.20703-10.712 0.4837-24.231 2.6787-37.58 9.377-11.457 5.749-21.584 16.72-28.84 26.256-7.2412 9.5162-11.611 17.575-11.629 17.607-3e-3 0.0268-0.32911 2.7748-0.6582 5.6426-0.16534 1.4409-0.33111 2.9056-0.45508 4.0566-0.062 0.57553-0.11235 1.0729-0.14843 1.4492-0.0361 0.37632-0.0566 0.63964-0.0566 0.71484 0 0.40554-0.12214 0.96363-0.39649 1.4375-0.27434 0.47387-0.71971 0.86914-1.3418 0.86914z\" />\n    </g>\n  </svg>\n);\n\nexport default ScaleBanana;\n","import React from \"react\";\nimport styles from \"./Ruler.module.scss\";\nimport { cssize } from \"./util\";\nimport ScalePerson from \"./ScalePerson\";\nimport ScaleBanana from \"./ScaleBanana\";\n\nconst Ruler = ({ segments }) => {\n  const children = Array.from({ length: segments }, (_, i) => (\n    <div\n      className={styles.segment}\n      key={i}\n      data-n={`${Math.ceil((segments - i - 1) / 10)}m`}\n    ></div>\n  ));\n  return (\n    <div className={styles.Ruler} style={cssize({ segments })}>\n      {children}\n      <div className={styles.person}>\n        <ScalePerson />\n        <div className={styles.banana}>\n          <ScaleBanana />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Ruler);\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport style from \"./DataTable.module.scss\";\nconst SimpleTable = ({ data }) => {\n  return (\n    <div className={style.DataTable}>\n      <Paper>\n        <Table>\n          <TableBody>\n            {Object.values(data).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n};\n\nexport default React.memo(SimpleTable);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Viewpoint.module.scss\";\nimport { cssize } from \"./util\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst Viewpoint = ({ vars, height }) => {\n  return (\n    <div\n      className={classNames(styles.Viewpoint, {\n        [styles.inverse]: height < 0,\n      })}\n      style={cssize({ ...vars, height: `${Math.abs(height)}%` })}\n    >\n      <div className={styles.icon}>\n        <Icon>visibility</Icon>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Viewpoint);\n","import React from \"react\";\nimport styles from \"./Scene.module.scss\";\nimport Screen from \"./Screen\";\nimport { useStateContext } from \"./state\";\nimport { cssize } from \"./util\";\nimport Ruler from \"./Ruler\";\nimport DataTable from \"./DataTable\";\nimport Viewpoint from \"./Viewpoint\";\n\nconst Scene = () => {\n  const { maxAbsSize, scene, screen, rowData, viewpoint } = useStateContext();\n  const segments = Math.ceil(maxAbsSize / 2 / 100) * 10 + 1;\n  return (\n    <React.Fragment>\n      <div className={styles.Scene} style={cssize(scene.vars)}>\n        <div className={styles.container}>\n          <div className={styles.subcontainer}>\n            <div className={styles.ground}></div>\n            <Screen vars={screen.vars} />\n            <Ruler segments={segments} />\n            <Viewpoint vars={viewpoint.vars} height={viewpoint.height} />\n          </div>\n        </div>\n      </div>\n      <DataTable data={rowData} />\n    </React.Fragment>\n  );\n};\n\nexport default Scene;\n","import React, { useCallback } from \"react\";\nimport styles from \"./Slider.module.scss\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MaterialSlider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { strip, clamp } from \"./util\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst Slider = ({\n  label,\n  onChange,\n  data: {\n    value,\n    range: [min, max],\n    step = 1,\n    units = null\n  }\n}) => {\n  // const handleSliderChange = (event, newValue) => {\n  //   setValue(newValue);\n  // };\n\n  // const handleInputChange = event => {\n  //   setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  // };\n\n  // const handleBlur = () => {\n  //   if (value < 0) {\n  //     setValue(0);\n  //   } else if (value > 100) {\n  //     setValue(100);\n  //   }\n  // };\n\n  const handleSliderChange = useCallback(\n    (_, value) => {\n      onChange(clamp(value, min, max));\n    },\n    [max, min, onChange]\n  );\n\n  const handleInputChange = useCallback(\n    ({ target: { value } }) => {\n      onChange(clamp(value, min, max));\n    },\n    [max, min, onChange]\n  );\n\n  const id = `input-${strip(label)}`;\n\n  return (\n    <div>\n      <Typography id={id} gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <MaterialSlider\n            step={step}\n            min={min}\n            max={max}\n            value={value}\n            onChange={handleSliderChange}\n            aria-labelledby={id}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={styles.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            // onBlur={onChange}\n            inputProps={{\n              step,\n              min,\n              max,\n              type: \"number\",\n              \"aria-labelledby\": id\n            }}\n            endAdornment={\n              units ? (\n                <InputAdornment position=\"end\">{units}</InputAdornment>\n              ) : null\n            }\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(Slider);\n","import React, { useMemo, useCallback } from \"react\";\nimport { useCallbackContext } from \"./state\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { optionalLabel } from \"./util\";\n\nconst inputProps = {\n  min: 768,\n  max: 7680,\n  step: 8,\n  type: \"number\"\n};\nconst Resolution = ({ presets, x, y }) => {\n  const callbacks = useCallbackContext();\n  const handleInputChangeX = useCallback(\n    ({ target: { value } }) => {\n      callbacks.setScreenResX(value);\n    },\n    [callbacks]\n  );\n  const handleInputChangeY = useCallback(\n    ({ target: { value } }) => {\n      callbacks.setScreenResY(value);\n    },\n    [callbacks]\n  );\n  const handleSelectChange = useCallback(\n    (_, { key }) => {\n      const [x, y] = key.split(\"x\").map(Number);\n      callbacks.setScreenResX(x);\n      callbacks.setScreenResY(y);\n    },\n    [callbacks]\n  );\n  const items = useMemo(\n    () =>\n      [...presets].map(([k, v]) => (\n        <MenuItem key={k} value={k}>\n          {optionalLabel(k, v.label)}\n        </MenuItem>\n      )),\n    [presets]\n  );\n  const key = `${x}x${y}`;\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Resolution</FormLabel>\n      <div>\n        <FormControl>\n          <Input\n            value={x}\n            inputProps={inputProps}\n            endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n            onChange={handleInputChangeX}\n          />\n          <FormHelperText>Width</FormHelperText>\n        </FormControl>\n        <FormControl>\n          <Input\n            value={y}\n            inputProps={inputProps}\n            endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n            onChange={handleInputChangeY}\n          />\n          <FormHelperText>Height</FormHelperText>\n        </FormControl>\n      </div>\n      <FormControl>\n        <InputLabel htmlFor=\"age-simple\">Preset</InputLabel>\n        <Select\n          value={presets.has(key) ? key : null}\n          onChange={handleSelectChange}\n        >\n          {items}\n        </Select>\n      </FormControl>\n    </FormControl>\n  );\n};\n\nexport default React.memo(Resolution);\n","import React from \"react\";\n// import styles from \"./Controls.module.scss\";\nimport Slider from \"./Slider\";\nimport { useStateContext, useCallbackContext } from \"./state\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Resolution from \"./Resolution\";\n\nconst Controls = () => {\n  const state = useStateContext();\n  const callbacks = useCallbackContext();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"stretch\"\n    >\n      <Slider\n        label=\"Viewing distance\"\n        data={state.depth}\n        onChange={callbacks.setDepth}\n      />\n      <Slider\n        label=\"Viewpoint height\"\n        data={state.viewpoint}\n        onChange={callbacks.setViewpoint}\n      />\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Screen</FormLabel>\n        <FormControl>\n          <Slider\n            label=\"Screen elevation\"\n            onChange={callbacks.setElevation}\n            data={state.elevation}\n          />\n        </FormControl>\n        <FormControl>\n          <Slider\n            label=\"Screen diagonal\"\n            data={state.diagonal}\n            onChange={callbacks.setDiagonal}\n          />\n        </FormControl>\n        <FormControl>\n          <Slider\n            label=\"Field of view\"\n            data={state.fov}\n            onChange={callbacks.setFOV}\n          />\n        </FormControl>\n      </FormControl>\n      <Resolution presets={state.screen.presets} {...state.screen.resolution} />\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            startIcon={<Icon>refresh</Icon>}\n            onClick={callbacks.reset}\n          >\n            Reset\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {\n  createMuiTheme,\n  //, makeStyles\n} from \"@material-ui/core/styles\";\n\nimport styles from \"./App.module.scss\";\nimport Scene from \"./Scene\";\nimport Controls from \"./Controls\";\nimport { Provider } from \"./state\";\nimport { produce } from \"immer\";\nimport update from \"./update\";\nimport { unserialize, serialize, removeHash } from \"./util\";\n\n// export const useStyles = makeStyles(theme => ({}));\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst persist = (state, location = window.location) => {\n  location.hash = serialize(state);\n};\nconst persistUpdate = state => {\n  update(state);\n  persist(state);\n};\n\nconst methods = state => ({\n  reset() {\n    removeHash();\n    return initialState;\n  },\n  setDepth(value) {\n    state.depth.value = value;\n    persistUpdate(state);\n  },\n  setDiagonal(value, persist = true) {\n    state.diagonal.value = value;\n    if (persist) {\n      persistUpdate(state);\n    } else {\n      update(state);\n    }\n  },\n  setElevation(value) {\n    state.elevation.value = value;\n    persistUpdate(state);\n  },\n  setViewpoint(value) {\n    state.viewpoint.value = value;\n    persistUpdate(state);\n  },\n  setScreenResX(value) {\n    state.screen.resolution.x = value;\n    persistUpdate(state);\n  },\n  setScreenResY(value) {\n    state.screen.resolution.y = value;\n    persistUpdate(state);\n  },\n  setFOV(value) {\n    state.fov.value = value;\n    persistUpdate(state);\n  },\n});\n\nconst initialState = produce(\n  {\n    absSize: NaN,\n    maxAbsSize: NaN,\n    ratio: NaN,\n    fov: {\n      value: 140,\n      range: [45, 160],\n      step: 1,\n      units: \"°\",\n    },\n    relative: {\n      elevation: NaN,\n      diagonal: NaN,\n      depth: NaN,\n      viewpoint: NaN,\n    },\n    elevation: {\n      value: 75,\n      range: [0, 200],\n      step: 5,\n      units: \"cm\",\n    },\n    diagonal: {\n      value: 65,\n      range: [5, 100],\n      units: \"in\",\n    },\n    depth: {\n      value: 200,\n      range: [10, 1000],\n      step: 10,\n      units: \"cm\",\n    },\n    viewpoint: {\n      value: 150,\n      range: [0, 200],\n      step: 10,\n      units: \"cm\",\n      vars: {\n        top: null,\n      },\n    },\n    scene: {\n      absSize: NaN,\n      vars: {\n        zoom: NaN,\n        aspectRatio: 4 / 3,\n        // aspectRatio: 16 / 10,\n        // aspectRatio: 1,\n        tileSize: NaN,\n      },\n    },\n    screen: {\n      resolution: {\n        x: 3840,\n        y: 2160,\n      },\n      presets: [\n        [1280, 720, \"HD\"],\n        [1920, 1080, \"FHD\"],\n        [1920, 1200],\n        [2560, 1440, \"QHD\"],\n        [3840, 1440],\n        [3840, 2160, \"4K UHD\"],\n        [7680, 4320, \"8K UHD\"],\n      ].reduce(\n        (m, [x, y, label = null]) => m.set(`${x}x${y}`, { x, y, label }),\n        new Map(),\n      ),\n      size: {\n        x: null,\n        y: null,\n      },\n      vars: {\n        width: null,\n        height: null,\n      },\n      viewpointMeasureHeight: null,\n      viewpointMeasureInverse: null,\n    },\n    rowData: {\n      degree: {\n        name: \"Viewing angle\",\n        value: null,\n      },\n      ppi: {\n        name: \"PPI\",\n        value: null,\n      },\n      ppd: {\n        name: \"PPD\",\n        value: null,\n      },\n    },\n  },\n  draft => {\n    const init = methods(draft);\n    init.setDiagonal(draft.diagonal.value, false);\n  },\n);\n\nconst persistedState = unserialize(initialState, update);\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider initialState={persistedState} methods={methods}>\n      <div className={styles.App}>\n        <main className={styles.main}>\n          <Scene />\n        </main>\n        <div>\n          <Controls />\n        </div>\n      </div>\n    </Provider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}