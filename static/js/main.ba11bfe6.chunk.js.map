{"version":3,"sources":["Scene.module.scss","App.module.scss","Ruler.module.scss","Screen.module.scss","DataTable.module.scss","update.js","util.js","Screen.js","state.js","Ruler.js","DataTable.js","Scene.js","Slider.js","Resolution.js","Controls.js","App.js","index.js"],"names":["module","exports","getAbsSize","n","fov","Math","sin","dToR","dataKeys","update","draft","value","depth","maxRange","range","sceneVars","scene","vars","diagonalIn","diagonal","maxAbsSize","absSize","diagonalCm","inToCm","screen","resolution","xRes","x","yRes","y","screenWidth","round","sqrt","screenWidthIn","cmToIn","size","screenHeight","screenHeightIn","ratio","format","percentize","width","height","elevation","aspectRatio","zoom","containerWidth","containerHeight","tileSize","viewpointOffset","viewpoint","a","b","rowData","centerAngle","atan","PI","degree","degreeize","ppi","hypot","console","log","ppd","clamp","min","max","mapObject","o","f","Object","fromEntries","entries","map","cssize","k","v","serialize","state","kv","join","d","React","memo","className","styles","Screen","style","StateContext","createContext","CallbackContext","Provider","methods","initialState","children","useMethods","callbacks","useStateContext","useContext","useCallbackContext","segments","Array","from","length","_","i","segment","key","data-n","ceil","Ruler","data","DataTable","Paper","Table","TableBody","values","row","TableRow","name","TableCell","component","scope","align","Scene","Fragment","container","subcontainer","ground","label","onChange","step","units","handleSliderChange","useCallback","handleInputChange","target","id","btoa","replace","Typography","gutterBottom","Grid","spacing","alignItems","item","xs","aria-labelledby","Input","input","margin","inputProps","type","endAdornment","InputAdornment","position","presets","handleInputChangeX","setScreenResX","handleInputChangeY","setScreenResY","handleSelectChange","split","Number","items","useMemo","MenuItem","FormControl","FormLabel","FormHelperText","InputLabel","htmlFor","Select","has","Controls","direction","justify","setDepth","setViewpoint","setElevation","setDiagonal","setFOV","Button","variant","startIcon","Icon","onClick","reset","theme","createMuiTheme","palette","persistUpdate","location","window","hash","persist","history","pushState","document","title","pathname","search","produce","NaN","relative","reduce","m","set","Map","persistedState","baseState","slice","filter","Boolean","s","trim","forEach","includes","unserialize","App","ThemeProvider","CssBaseline","main","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ba11bfe6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scene\":\"Scene_Scene__2Jo2n\",\"container\":\"Scene_container__igEhO\",\"subcontainer\":\"Scene_subcontainer__3mBWq\",\"ground\":\"Scene_ground__2OY49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ruler\":\"Ruler_Ruler__2j-pf\",\"segment\":\"Ruler_segment__Tuf2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Screen_Screen__1_9xZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataTable\":\"DataTable_DataTable__3VVmB\"};","import { inToCm, cmToIn, degreeize, percentize, dToR } from \"./util\";\n\nexport const getAbsSize = (n, fov) =>\n  (n * Math.sin(dToR(fov / 2))) / Math.sin(dToR(fov / 2) + dToR(90));\nconst getDeg = (a, b) => Math.atan(a / b) * (180 / Math.PI);\n\nexport const dataKeys = [\"depth\", \"diagonal\", \"elevation\", \"viewpoint\", \"fov\"];\n\nconst update = draft => {\n  // fov\n  const {\n    fov: { value: fov },\n  } = draft;\n  const {\n    depth: {\n      range: [, maxRange],\n      value: depth,\n    },\n    scene: { vars: sceneVars },\n    diagonal: { value: diagonalIn },\n  } = draft;\n  const maxAbsSize = getAbsSize(maxRange, fov);\n  draft.maxAbsSize = maxAbsSize;\n  const absSize = getAbsSize(depth, fov);\n  draft.absSize = absSize;\n  // screen size\n  const diagonalCm = inToCm(diagonalIn);\n  const { x: xRes, y: yRes } = draft.screen.resolution;\n  const screenWidth = Math.round(\n    (diagonalCm * xRes) / Math.sqrt(xRes ** 2 + yRes ** 2),\n  );\n  const screenWidthIn = cmToIn(screenWidth);\n  draft.screen.size.x = screenWidth;\n  const screenHeight = Math.round(screenWidth / (xRes / yRes));\n  const screenHeightIn = cmToIn(screenHeight);\n  draft.screen.size.y = screenHeight;\n  // relativize\n  const ratio = 100 / maxAbsSize;\n  draft.ratio = ratio;\n  const format = n => percentize(n * ratio);\n  draft.screen.vars.width = format(draft.screen.size.x);\n  draft.screen.vars.height = format(draft.screen.size.y);\n  const {\n    elevation: { value: elevation },\n  } = draft;\n  draft.screen.vars.elevation = percentize(elevation * ratio);\n  // scene size\n  const { aspectRatio } = sceneVars;\n  const zoom = maxAbsSize / absSize;\n  sceneVars.ratio = ratio;\n  sceneVars.zoom = zoom;\n  sceneVars.containerWidth = percentize(zoom * 100);\n  sceneVars.containerHeight = percentize(zoom * 100 * aspectRatio);\n  sceneVars.tileSize = percentize(100 / (maxAbsSize / 100));\n  const viewpointOffset = draft.viewpoint.value;\n  sceneVars.viewpointOffset = percentize(viewpointOffset * ratio);\n  // data rows\n  const { rowData } = draft;\n  const centerPoint = elevation + screenHeight / 2 - viewpointOffset;\n  // const topPoint = elevation + screenHeight - viewpointOffset;\n  const centerAngle = getDeg(centerPoint, depth);\n  // const topAngle = getDeg(topPoint, depth);\n  // const botAngle = getDeg(elevation - viewpointOffset, depth);\n  rowData.degree.value = degreeize(Math.round(centerAngle));\n  const ppi = Math.round(Math.hypot(xRes, yRes) / diagonalIn);\n  rowData.ppi.value = ppi;\n  // const angle = Math.abs(\n  //   topAngle > botAngle ? topAngle - botAngle : botAngle - topAngle,\n  // );\n  console.log({\n    width: screenWidthIn,\n    screenHeightIn,\n    diagonal: diagonalIn,\n    depth: cmToIn(depth),\n  });\n  const ppd =\n    xRes /\n    2 /\n    ((180 / Math.PI) *\n      Math.atan(\n        ((diagonalIn / Math.sqrt(xRes ** 2 + yRes ** 2)) * (xRes / 2)) /\n          cmToIn(depth),\n      ));\n  rowData.ppd.value = Math.round(ppd * 10) / 10;\n  // console.log(angle);\n};\n\nexport default update;\n","import { produce } from \"immer\";\nimport { dataKeys } from \"./update\";\n\nexport const strip = s => btoa(s).replace(/=/g, \"\");\n\nexport const clamp = (n, min, max) => Math.min(Math.max(n, min), max);\n\nconst inCmRatio = 2.54;\nexport const inToCm = n => n * inCmRatio;\nexport const cmToIn = n => n / inCmRatio;\n\nexport const optionalLabel = (a, b) => `${a}${b ? ` (${b})` : \"\"}`;\n\nexport const mapObject = (o, f) => Object.fromEntries(Object.entries(o).map(f));\nexport const mapObjectValues = (o, f) => mapObject(o, ([k, v]) => [k, f(v)]);\n\nexport const cssize = o => mapObject(o, ([k, v]) => [`--${k}`, v]);\n\nexport const degreeize = n => `${n}°`;\nexport const percentize = n => `${n}%`;\n\nexport const serialize = state =>\n  dataKeys\n    .map(k => [k, state[k].value])\n    .map(kv => kv.join(\":\"))\n    .join(\",\");\n\nexport const unserialize = (baseState, update, hash = window.location.hash) => {\n  const data = hash\n    .slice(1)\n    .split(\",\")\n    .filter(Boolean)\n    .map(x => x.split(\":\").map(s => s.trim()));\n\n  return produce(baseState, draft => {\n    data.forEach(([k, v]) => {\n      if (!v || !dataKeys.includes(k)) {\n        return;\n      }\n      draft[k].value = Number(v);\n    });\n    update(draft);\n  });\n};\n\nexport const dToR = d => d * (Math.PI / 180);\n\nexport const removeHash = () => {\n  window.history.pushState(\n    \"\",\n    document.title,\n    window.location.pathname + window.location.search,\n  );\n};\n","import React from \"react\";\nimport styles from \"./Screen.module.scss\";\nimport { cssize } from \"./util\";\n\nconst Screen = ({ vars }) => {\n  return <div className={styles.Screen} style={cssize(vars)}></div>;\n};\n\nexport default React.memo(Screen);\n","import React, { createContext, useContext } from \"react\";\nimport useMethods from \"use-methods\";\n\nconst StateContext = createContext();\nconst CallbackContext = createContext();\n\nexport const Provider = ({ methods, initialState, children }) => {\n  const [state, callbacks] = useMethods(methods, initialState);\n  return (\n    <StateContext.Provider value={state}>\n      <CallbackContext.Provider value={callbacks}>\n        {children}\n      </CallbackContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateContext = () => useContext(StateContext);\nexport const useCallbackContext = () => useContext(CallbackContext);\n","import React from \"react\";\nimport styles from \"./Ruler.module.scss\";\nimport { cssize } from \"./util\";\n\nconst Ruler = ({ segments }) => {\n  const children = Array.from({ length: segments }, (_, i) => (\n    <div\n      className={styles.segment}\n      key={i}\n      data-n={`${Math.ceil((segments - i - 1) / 10)}m`}\n    ></div>\n  ));\n  return (\n    <div className={styles.Ruler} style={cssize({ segments })}>\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(Ruler);\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport style from \"./DataTable.module.scss\";\nconst SimpleTable = ({ data }) => {\n  return (\n    <div className={style.DataTable}>\n      <Paper>\n        <Table>\n          <TableBody>\n            {Object.values(data).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n};\n\nexport default React.memo(SimpleTable);\n","import React from \"react\";\nimport styles from \"./Scene.module.scss\";\nimport Screen from \"./Screen\";\nimport { useStateContext } from \"./state\";\nimport { cssize } from \"./util\";\nimport Ruler from \"./Ruler\";\nimport DataTable from \"./DataTable\";\n\nconst Scene = () => {\n  const { maxAbsSize, scene, screen, rowData } = useStateContext();\n  const segments = Math.ceil(maxAbsSize / 2 / 100) * 10 + 1;\n  return (\n    <React.Fragment>\n      <div className={styles.Scene} style={cssize(scene.vars)}>\n        <div className={styles.container}>\n          <div className={styles.subcontainer}>\n            <div className={styles.ground}></div>\n            <Screen vars={screen.vars} />\n            <Ruler segments={segments} />\n          </div>\n        </div>\n      </div>\n      <DataTable data={rowData} />\n    </React.Fragment>\n  );\n};\n\nexport default Scene;\n","import React, { useCallback } from \"react\";\nimport styles from \"./Slider.module.scss\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MaterialSlider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { strip, clamp } from \"./util\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst Slider = ({\n  label,\n  onChange,\n  data: {\n    value,\n    range: [min, max],\n    step = 1,\n    units = null\n  }\n}) => {\n  // const handleSliderChange = (event, newValue) => {\n  //   setValue(newValue);\n  // };\n\n  // const handleInputChange = event => {\n  //   setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  // };\n\n  // const handleBlur = () => {\n  //   if (value < 0) {\n  //     setValue(0);\n  //   } else if (value > 100) {\n  //     setValue(100);\n  //   }\n  // };\n\n  const handleSliderChange = useCallback(\n    (_, value) => {\n      onChange(clamp(value, min, max));\n    },\n    [max, min, onChange]\n  );\n\n  const handleInputChange = useCallback(\n    ({ target: { value } }) => {\n      onChange(clamp(value, min, max));\n    },\n    [max, min, onChange]\n  );\n\n  const id = `input-${strip(label)}`;\n\n  return (\n    <div>\n      <Typography id={id} gutterBottom>\n        {label}\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <MaterialSlider\n            step={step}\n            min={min}\n            max={max}\n            value={value}\n            onChange={handleSliderChange}\n            aria-labelledby={id}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={styles.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            // onBlur={onChange}\n            inputProps={{\n              step,\n              min,\n              max,\n              type: \"number\",\n              \"aria-labelledby\": id\n            }}\n            endAdornment={\n              units ? (\n                <InputAdornment position=\"end\">{units}</InputAdornment>\n              ) : null\n            }\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default React.memo(Slider);\n","import React, { useMemo, useCallback } from \"react\";\nimport { useCallbackContext } from \"./state\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { optionalLabel } from \"./util\";\n\nconst inputProps = {\n  min: 768,\n  max: 7680,\n  step: 8,\n  type: \"number\"\n};\nconst Resolution = ({ presets, x, y }) => {\n  const callbacks = useCallbackContext();\n  const handleInputChangeX = useCallback(\n    ({ target: { value } }) => {\n      callbacks.setScreenResX(value);\n    },\n    [callbacks]\n  );\n  const handleInputChangeY = useCallback(\n    ({ target: { value } }) => {\n      callbacks.setScreenResY(value);\n    },\n    [callbacks]\n  );\n  const handleSelectChange = useCallback(\n    (_, { key }) => {\n      const [x, y] = key.split(\"x\").map(Number);\n      callbacks.setScreenResX(x);\n      callbacks.setScreenResY(y);\n    },\n    [callbacks]\n  );\n  const items = useMemo(\n    () =>\n      [...presets].map(([k, v]) => (\n        <MenuItem key={k} value={k}>\n          {optionalLabel(k, v.label)}\n        </MenuItem>\n      )),\n    [presets]\n  );\n  const key = `${x}x${y}`;\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Resolution</FormLabel>\n      <div>\n        <FormControl>\n          <Input\n            value={x}\n            inputProps={inputProps}\n            endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n            onChange={handleInputChangeX}\n          />\n          <FormHelperText>Width</FormHelperText>\n        </FormControl>\n        <FormControl>\n          <Input\n            value={y}\n            inputProps={inputProps}\n            endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n            onChange={handleInputChangeY}\n          />\n          <FormHelperText>Height</FormHelperText>\n        </FormControl>\n      </div>\n      <FormControl>\n        <InputLabel htmlFor=\"age-simple\">Preset</InputLabel>\n        <Select\n          value={presets.has(key) ? key : null}\n          onChange={handleSelectChange}\n        >\n          {items}\n        </Select>\n      </FormControl>\n    </FormControl>\n  );\n};\n\nexport default React.memo(Resolution);\n","import React from \"react\";\n// import styles from \"./Controls.module.scss\";\nimport Slider from \"./Slider\";\nimport { useStateContext, useCallbackContext } from \"./state\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Resolution from \"./Resolution\";\n\nconst Controls = () => {\n  const state = useStateContext();\n  const callbacks = useCallbackContext();\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"stretch\"\n    >\n      <Slider\n        label=\"Scene depth\"\n        data={state.depth}\n        onChange={callbacks.setDepth}\n      />\n      <Slider\n        label=\"Viewpoint height\"\n        data={state.viewpoint}\n        onChange={callbacks.setViewpoint}\n      />\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Screen</FormLabel>\n        <FormControl>\n          <Slider\n            label=\"Elevation\"\n            onChange={callbacks.setElevation}\n            data={state.elevation}\n          />\n        </FormControl>\n        <FormControl>\n          <Slider\n            label=\"Diagonal\"\n            data={state.diagonal}\n            onChange={callbacks.setDiagonal}\n          />\n        </FormControl>\n        <FormControl>\n          <Slider label=\"FOV\" data={state.fov} onChange={callbacks.setFOV} />\n        </FormControl>\n      </FormControl>\n      <Resolution presets={state.screen.presets} {...state.screen.resolution} />\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            startIcon={<Icon>refresh</Icon>}\n            onClick={callbacks.reset}\n          >\n            Reset\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {\n  createMuiTheme,\n  //, makeStyles\n} from \"@material-ui/core/styles\";\n\nimport styles from \"./App.module.scss\";\nimport Scene from \"./Scene\";\nimport Controls from \"./Controls\";\nimport { Provider } from \"./state\";\nimport { produce } from \"immer\";\nimport update from \"./update\";\nimport { unserialize, serialize, removeHash } from \"./util\";\n\n// export const useStyles = makeStyles(theme => ({}));\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst persist = (state, location = window.location) => {\n  location.hash = serialize(state);\n};\nconst persistUpdate = state => {\n  update(state);\n  persist(state);\n};\n\nconst methods = state => ({\n  reset() {\n    removeHash();\n    return initialState;\n  },\n  setDepth(value) {\n    state.depth.value = value;\n    persistUpdate(state);\n  },\n  setDiagonal(value, persist = true) {\n    state.diagonal.value = value;\n    if (persist) {\n      persistUpdate(state);\n    } else {\n      update(state);\n    }\n  },\n  setElevation(value) {\n    state.elevation.value = value;\n    persistUpdate(state);\n  },\n  setViewpoint(value) {\n    state.viewpoint.value = value;\n    persistUpdate(state);\n  },\n  setScreenResX(value) {\n    state.screen.resolution.x = value;\n    persistUpdate(state);\n  },\n  setScreenResY(value) {\n    state.screen.resolution.y = value;\n    persistUpdate(state);\n  },\n  setFOV(value) {\n    state.fov.value = value;\n    persistUpdate(state);\n  },\n});\n\nconst initialState = produce(\n  {\n    absSize: NaN,\n    maxAbsSize: NaN,\n    ratio: NaN,\n    fov: {\n      value: 140,\n      range: [45, 160],\n      step: 1,\n    },\n    relative: {\n      elevation: NaN,\n      diagonal: NaN,\n      depth: NaN,\n      viewpoint: NaN,\n    },\n    elevation: {\n      value: 75,\n      range: [0, 200],\n      step: 5,\n      units: \"cm\",\n    },\n    diagonal: {\n      value: 65,\n      range: [10, 88],\n      units: \"in\",\n    },\n    depth: {\n      value: 200,\n      range: [10, 1000],\n      step: 10,\n      units: \"cm\",\n    },\n    viewpoint: {\n      value: 150,\n      range: [0, 200],\n      step: 10,\n      units: \"cm\",\n    },\n    scene: {\n      absSize: NaN,\n      vars: {\n        zoom: NaN,\n        aspectRatio: 4 / 3,\n        // aspectRatio: 16 / 10,\n        // aspectRatio: 1,\n        tileSize: NaN,\n      },\n    },\n    screen: {\n      resolution: {\n        x: 3840,\n        y: 2160,\n      },\n      presets: [\n        [1280, 720, \"HD\"],\n        [1920, 1080, \"FHD\"],\n        [1920, 1200],\n        [2560, 1440, \"QHD\"],\n        [3840, 1440],\n        [3840, 2160, \"4K UHD\"],\n        [7680, 4320, \"8K UHD\"],\n      ].reduce(\n        (m, [x, y, label = null]) => m.set(`${x}x${y}`, { x, y, label }),\n        new Map(),\n      ),\n      size: {\n        x: null,\n        y: null,\n      },\n      vars: {\n        width: null,\n        height: null,\n      },\n    },\n    rowData: {\n      degree: {\n        name: \"Viewing angle\",\n        value: null,\n      },\n      ppi: {\n        name: \"PPI\",\n        value: null,\n      },\n      ppd: {\n        name: \"PPD\",\n        value: null,\n      },\n    },\n  },\n  draft => {\n    const init = methods(draft);\n    init.setDiagonal(draft.diagonal.value, false);\n  },\n);\n\nconst persistedState = unserialize(initialState, update);\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider initialState={persistedState} methods={methods}>\n      <div className={styles.App}>\n        <main className={styles.main}>\n          <Scene />\n        </main>\n        <div>\n          <Controls />\n        </div>\n      </div>\n    </Provider>\n  </ThemeProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}